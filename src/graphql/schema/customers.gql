type Customer {
  userid: Int
  customerid: Int
  category: String
  company_name: String
  email: String
  main_phone: String
  work_phone: String
  first_name: String
  middle_name: String
  last_name: String
  display_name: String
  website: String
  amount: String
  currency: String
  payment_terms: String
  customer_billing_address: [CustomerBillingAddress]
  customer_shipping_addresses: [CustomerShippingAddress]
  customer_contact_person: [CustomerContactPerson]
}

type CustomerBillingAddress {
  location: String
  state: String
  city: String
  country: String
  zipcode: String
  isdefault: Boolean
}

type CustomerShippingAddress {
  location: String
  state: String
  city: String
  country: String
  zipcode: String
  isdefault: Boolean
}

type CustomerContactPerson {
  cpfirstname: String
  cplastname: String
  cpemail: String
  cpcontact: String
  cpjobrole: String
}

input CustomerBillingAddressInput {
  customerid:Int
  location: String
  state: String
  city: String
  country: String
  zipcode: String
  isdefault: Boolean
}

input CustomerShippingAddressInput {
  customerid:Int
  location: String
  state: String
  city: String
  country: String
  zipcode: String
  isdefault: Boolean
}

input CustomerContactPersonInput {
  customerid:Int
  cpfirstname: String
  cplastname: String
  cpemail: String
  cpcontact: String
  cpjobrole: String
}

type GetCustomerResponse {
  code: Int
  status: String
  data: Customer
}

type GetCustomerListResponse {
  code: Int
  status: String
  data: [Customer]
}

input SaveCustomerInput {
  userid: Int
  customerid: Int
  category: String
  company_name: String
  email: String
  main_phone: String
  work_phone: String
  first_name: String
  middle_name: String
  last_name: String
  display_name: String
  website: String
  amount: String
  currency: String
  payment_terms: String
  customer_billing_address: [CustomerBillingAddressInput]
  customer_shipping_addresses: [CustomerShippingAddressInput]
  customer_contact_person: [CustomerContactPersonInput]
}

type SaveCustomerResponse {
  code: Int
  status: String
  id: Int
  data: SaveCustomerData
}

type SaveCustomerData {
  customer: Customer
  billingAddresses: [CustomerBillingAddress]
  shippingAddresses: [CustomerShippingAddress]
  contactPersons: [CustomerContactPerson]
}


type Query {
  getCustomers: GetCustomerListResponse
  getCustomer(id: ID!): GetCustomerResponse
}

type Mutation {
  saveCustomer(input: SaveCustomerInput): SaveCustomerResponse
}
